// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.29;

import "../src/BLS12381Helper.sol";
import {Test, console} from "forge-std/Test.sol";
import {Verifier} from "../src/CommitteeSigVerifier.sol";
import {CommitteeSigVerifier} from "../src/CommitteeSigZK.sol";

contract CommitteeSigVerifierTest is Test {
    CommitteeSigVerifier public sigVerifier;
    Verifier public zkVerifier;

    function setUp() public {
        zkVerifier = new Verifier();
        sigVerifier = new CommitteeSigVerifier(address(zkVerifier));
    }

    function test_selector() public {
        bytes4 sel = bytes4(keccak256("verifyProof(uint256[8],uint256[2],uint256[2],uint256[13])"));
        console.logBytes4(sel);
    }

    function test_verifySig() public {
//        bytes memory proof = hex"1018a1408aff4e1c11f862c793d3733938a510d7219bddacaf3ac025a336b23b1013079b01b65df63356dd835c7c23d02ab06e6142a3ca8d137a3cfebc7515012f43bec68f2385f69ade0d58e51deb2c3ed95b71dada1ce8bc8a085e1c663cc60fd0f9819d993e45ad13eeae62acabc63b1eb1b12b4687ed3b068aa3ba5ddfc8043cf79aabd9db2187d406f05bbb6fcd05e773ada5e356b07db9489116ceb2fb0da2deed73a4f9d5e8101765e6fc23cdfe32b2af8426127d2da2bbaf2c3bfab12e9ce1292c7039b1f5244e97d010983816c5d3083511fdec80b9f82839641b970d820001026aa7283f12695752908abd80c7023bb42549767c95f1096e6f0a01000000012eb474ddbf1aa6fd1d2c7ef9b877ca2e88887e9d3cb86426e1909a9983aa82791710d8427a8cd54355973b307e64b949c70e44eabe33295cade20216f2d15b5304cec6b7582eb6a4931a0c671d7798ca90d2d1797775fa938f4d9b85d8beb8c408060284e6d2c7253127747a38b50e354fba49aed288fa14cbde19eaadaa5887";
        bytes memory proof = hex"1018a1408aff4e1c11f862c793d3733938a510d7219bddacaf3ac025a336b23b1013079b01b65df63356dd835c7c23d02ab06e6142a3ca8d137a3cfebc7515012f43bec68f2385f69ade0d58e51deb2c3ed95b71dada1ce8bc8a085e1c663cc60fd0f9819d993e45ad13eeae62acabc63b1eb1b12b4687ed3b068aa3ba5ddfc8043cf79aabd9db2187d406f05bbb6fcd05e773ada5e356b07db9489116ceb2fb0da2deed73a4f9d5e8101765e6fc23cdfe32b2af8426127d2da2bbaf2c3bfab12e9ce1292c7039b1f5244e97d010983816c5d3083511fdec80b9f82839641b970d820001026aa7283f12695752908abd80c7023bb42549767c95f1096e6f0a012eb474ddbf1aa6fd1d2c7ef9b877ca2e88887e9d3cb86426e1909a9983aa82791710d8427a8cd54355973b307e64b949c70e44eabe33295cade20216f2d15b5304cec6b7582eb6a4931a0c671d7798ca90d2d1797775fa938f4d9b85d8beb8c408060284e6d2c7253127747a38b50e354fba49aed288fa14cbde19eaadaa5887";
//        bytes memory input = hex"0000000d000000000000000000000000000000000000000000000000dd860e4ade9d9fd9000000000000000000000000000000000000000000000000600b26e5504e7823000000000000000000000000000000000000000000000000ff9072a43d5744830000000000000000000000000000000000000000000000007d1246483711c48d000000000000000000000000000000000000000000000000e66f8948446b5dd900000000000000000000000000000000000000000000000019c76d6e89bd25e8000000000000000000000000000000000000000000000000ef50ec3739cc6cf1000000000000000000000000000000000000000000000000276d732577177b62000000000000000000000000000000000000000000000000a13cf850c0c5713b000000000000000000000000000000000000000000000000edc3eab10097b4fb000000000000000000000000000000000000000000000000ad0326dfde834e2c000000000000000000000000000000000000000000000000116955909603c4291cf2542241bf7df9dd50fc28db1eb8104d7c293d6f53378d17d9688327c7afbb";
        bytes memory input = hex"000000000000000000000000000000000000000000000000dd860e4ade9d9fd9000000000000000000000000000000000000000000000000600b26e5504e7823000000000000000000000000000000000000000000000000ff9072a43d5744830000000000000000000000000000000000000000000000007d1246483711c48d000000000000000000000000000000000000000000000000e66f8948446b5dd900000000000000000000000000000000000000000000000019c76d6e89bd25e8000000000000000000000000000000000000000000000000ef50ec3739cc6cf1000000000000000000000000000000000000000000000000276d732577177b62000000000000000000000000000000000000000000000000a13cf850c0c5713b000000000000000000000000000000000000000000000000edc3eab10097b4fb000000000000000000000000000000000000000000000000ad0326dfde834e2c000000000000000000000000000000000000000000000000116955909603c4291cf2542241bf7df9dd50fc28db1eb8104d7c293d6f53378d17d9688327c7afbb";
        bool success = sigVerifier.verifySig(proof, input);
        assert(success);
    }
}