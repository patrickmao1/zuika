// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.29;

import "../src/BLS12381Helper.sol";
import {Test, console} from "forge-std/Test.sol";
import {Verifier} from "../src/CommitteeSigVerifier.sol";
import {CommitteeSigVerifier} from "../src/CommitteeSigZK.sol";

contract CommitteeSigVerifierTest is Test {
    CommitteeSigVerifier public sigVerifier;
    Verifier public zkVerifier;

    function setUp() public {
        zkVerifier = new Verifier();
        sigVerifier = new CommitteeSigVerifier(address(zkVerifier));
    }

    function test_selector() public {
        bytes4 sel = bytes4(keccak256("verifyProof(uint256[8],uint256[2],uint256[2],uint256[13])"));
        console.logBytes4(sel);
    }

    function test_verifySig() public {
        bytes memory proof = hex"0f2a40f34dcddde135239e794e06e76e74282fbf048a4478a9dbd2838f294c231aa86e104701e1a08738c7d221592ed806e3c3cac646a95f94fd4722b4b651880876da98a3ba88ab95abd34ad5bc7d2432761c2b0f09ae2a2532e2181d0a49de1a7fa9f70dd8fe4758e15a4d0314cd8c809ec9f93d70999d555da77f97ae619f270edb78b5afc8266206708b72a1202cf46189213c8ca2678c19ab0bb63e048215ab9ad3cb2500c3310624ebecc651dd347e0c3dece69cb39403f6e7aec4d3d81bb9c587c49f9089404c2243b12eca013ad5a4fd5f6d08f2944dea970c6b0e1f060d6cddaeecc1a1540fa2f03ccf1138c3230537ad1eff96cadc2da45f0c321f1e838975319c136b1e19599fbff36898409af90cce2c8f29589a8ea86a06460b1046dffca8904caf3cfe2ba23e11f15a973f134a10f3aafeff55e82f3d4104f32a5028f32193a1e20aa2d6fa309f33794bbcf8f513432e6c16cf3b359575f4892265fe80343844d6ecc403936bca6407027a8bbacb1f8a6c3c0115fc208a74a8";
        bytes memory input = hex"000000000000000000000000000000000000000000000000dd860e4ade9d9fd9000000000000000000000000000000000000000000000000600b26e5504e7823000000000000000000000000000000000000000000000000ff9072a43d5744830000000000000000000000000000000000000000000000007d1246483711c48d000000000000000000000000000000000000000000000000e66f8948446b5dd900000000000000000000000000000000000000000000000019c76d6e89bd25e8000000000000000000000000000000000000000000000000ef50ec3739cc6cf1000000000000000000000000000000000000000000000000276d732577177b62000000000000000000000000000000000000000000000000a13cf850c0c5713b000000000000000000000000000000000000000000000000edc3eab10097b4fb000000000000000000000000000000000000000000000000ad0326dfde834e2c000000000000000000000000000000000000000000000000116955909603c4291cf2542241bf7df9dd50fc28db1eb8104d7c293d6f53378d17d9688327c7afbb";
        bool success = sigVerifier.verifySig(proof, input);
        assert(success);
    }
}